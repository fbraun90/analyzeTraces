function Thresholding(figure)

    handles = guidata(figure);
    traces = getappdata(gcf, 'traces');
                    
    if not(isfield(handles.functions.Thresholding, 'panel'))
        handles.functions.Thresholding.panel = uipanel(...
            'Parent', gcf, ...
            'Units', 'normalized', ...
            'Position', [.32, .01, .33, .44], ...
            'Title', 'Thresholding',...
            'Visible', 'off');
        
        % controls
        
        % input
        uicontrol('Parent', handles.functions.Thresholding.panel, ...
            'Style', 'text', ...
            'HorizontalAlignment', 'right',...
            'Units', 'normalized', ...
            'Position', [.02 .84 .47 .1], ...
            'String', 'Input layer', ...
            'BusyAction', 'cancel');
        handles.functions.Thresholding.input = uicontrol(...
            'Parent', handles.functions.Thresholding.panel,...
            'Style', 'popupmenu',...
            'Units', 'normalized',...
            'Position', [.5 .85 .3 .1],...
            'String', {'-'},...
            'Value', 1);
        % threshold value
        uicontrol('Parent', handles.functions.Thresholding.panel, ...
            'Style', 'text', ...
            'HorizontalAlignment', 'right',...
            'Units', 'normalized', ...
            'Position', [.02 .74 .47 .1], ...
            'String', 'Threshold value', ...
            'BusyAction', 'cancel');
        handles.functions.Thresholding.value = uicontrol(...
            'Parent', handles.functions.Thresholding.panel, ...
            'Style', 'Edit', ...
            'Units', 'normalized', ...
            'Position',[.5 .78 .3 .07],...
            'String', '',...
            'Callback', @typeSelection);
        % values above threshold
        uicontrol( 'Parent', handles.functions.Thresholding.panel, ...
            'Style', 'text', ...
            'HorizontalAlignment', 'right',...
            'Units', 'normalized', ...
            'Position', [.02 .64 .47 .1], ...
            'String', 'set values above threshold to', ...
            'BusyAction', 'cancel'); 
        handles.functions.Thresholding.aboveType = uicontrol(...
            'Parent', handles.functions.Thresholding.panel, ...
            'Style', 'popupmenu', ...
            'Units', 'normalized', ...
            'Position',[.5 .68 .14 .07], ...
            'String', {'max'; 'average'; 'fixed'},...
            'Value', 1,...
            'Enable', 'off', ...
            'Callback', @typeSelection);
        handles.functions.Thresholding.above = uicontrol(...
            'Parent', handles.functions.Thresholding.panel, ...
            'Style', 'Edit', ...
            'Units', 'normalized', ...
            'Position',[.65 .68 .15 .07], ...
            'Enable', 'off', ...
            'String', '10');
        % values below threshold
        uicontrol( ...
            'Parent', handles.functions.Thresholding.panel, ...
            'Style', 'text', ...
            'HorizontalAlignment', 'right',...
            'Units', 'normalized', ...
            'Position', [.02 .54 .47 .1], ...
            'String', 'set values below threshold to', ...
            'BusyAction', 'cancel'); 
        handles.functions.Thresholding.belowType = uicontrol(...
            'Parent', handles.functions.Thresholding.panel, ...
            'Style', 'popupmenu', ...
            'Units', 'normalized', ...
            'Position',[.5 .58 .14 .07], ...
            'String', {'min'; 'average'; 'fixed'},...
            'Value', 1,...
            'Enable', 'off', ...
            'Callback', @typeSelection);
        handles.functions.Thresholding.below = uicontrol(...
            'Parent', handles.functions.Thresholding.panel, ...
            'Style', 'Edit', ...
            'Units', 'normalized', ...
            'Position',[.65 .58 .15 .07], ...
            'Enable', 'off', ...
            'String', '0');
        % output layer name
        uicontrol( ...
            'Parent', handles.functions.Thresholding.panel, ...
            'Style', 'text', ...
            'HorizontalAlignment', 'right',...
            'Units', 'normalized', ...
            'Position', [.02 .44 .47 .1], ...
            'String', 'Output layer name', ...
            'BusyAction', 'cancel'); 
        handles.functions.Thresholding.output = uicontrol(...
            'Parent', handles.functions.Thresholding.panel, ...
            'Style', 'Edit', ...
            'Units', 'normalized', ...
            'Position', [.5 .48 .3 .07], ...
            'String', 'thresholded');
        
        % Pushbuttons        
        uicontrol('Parent', handles.functions.Thresholding.panel, ...
            'Style', 'Pushbutton', ...
            'Units', 'normalized', ...
            'Position',[.02 .01 .19 .1], ...
            'String', 'Do it', ...
            'Callback', @execute);
%         uicontrol('Parent', handles.functions.Thresholding.panel, ...
%             'Style', 'Pushbutton', ...
%             'Units', 'normalized', ...
%             'Position',[.22 .01 .19 .1], ...
%             'String', 'Categorize traces with less than 5 frames over 10000', ...
%             'Callback', @threshold);
%         uicontrol('Parent', handles.functions.Thresholding.panel, ...
%             'Style', 'Pushbutton', ...
%             'Units', 'normalized', ...
%             'Position',[.42 .01 .19 .1], ...
%             'String', 'Reset', ...
%             'Callback', @reset);

    guidata(gcf, handles);
    
    end
        
    if not(isempty(traces))
        if not(isfield(handles, 'selection'))
%         error('No trace selected');
        end
        % retrieve layers that are not empty
        t = handles.selection.Value(1,1);

        set(handles.functions.Thresholding.input, 'String', fieldnames([traces(t).layers]))

        if handles.functions.Thresholding.input.Value>length(fieldnames([traces(t).layers]))
            set(handles.functions.Thresholding.input, 'Value', 1)
        end
    end
    
    guidata(gcf, handles);
   
end

function typeSelection(varargin)

    handles = guidata(gcbf);
    traces = getappdata(gcbf, 'traces');
    
    % Don't update fields if no values are entered in the fields
    if isempty(handles.functions.Thresholding.value.String)
        set(handles.functions.Thresholding.aboveType, 'Enable', 'off');
        set(handles.functions.Thresholding.belowType, 'Enable', 'off');
        set(handles.functions.Thresholding.above, 'Enable', 'off');
        set(handles.functions.Thresholding.below, 'Enable', 'off');
        return
    end
    
    input = handles.functions.Thresholding.input.String{handles.functions.Thresholding.input.Value};
    t = handles.selection.Value(1,1);            
    trace = traces(t).layers.(input);
   
    threshold = str2num(handles.functions.Thresholding.value.String);
    aboveType = handles.functions.Thresholding.aboveType.String{handles.functions.Thresholding.aboveType.Value};
    belowType = handles.functions.Thresholding.belowType.String{handles.functions.Thresholding.belowType.Value};
    
    
    set(handles.functions.Thresholding.aboveType, 'Enable', 'on');
    set(handles.functions.Thresholding.belowType, 'Enable', 'on');
    
    switch aboveType
        case 'max'
            set(handles.functions.Thresholding.above, 'String', max(trace));
            set(handles.functions.Thresholding.above, 'Enable', 'off');
        case 'average'
            avg = mean(trace(trace > threshold));
            set(handles.functions.Thresholding.above, 'String', avg);
            set(handles.functions.Thresholding.above, 'Enable', 'off');
        case 'fixed'
            set(handles.functions.Thresholding.above, 'Enable', 'on');
    end
    
    switch belowType
        case 'min'
            set(handles.functions.Thresholding.below, 'String', min(trace));
            set(handles.functions.Thresholding.below, 'Enable', 'off');
        case 'average'
            avg = mean(trace(trace <= threshold));
            set(handles.functions.Thresholding.below, 'String', avg);
            set(handles.functions.Thresholding.below, 'Enable', 'off');
        case 'fixed'
            set(handles.functions.Thresholding.below, 'Enable', 'on');
    end

end


function execute(varargin)

    handles = guidata(gcbf);
    traces = getappdata(gcbf, 'traces');
    
    typeSelection();
    
    input = handles.functions.Thresholding.input.String{handles.functions.Thresholding.input.Value};
    
    output = handles.functions.Thresholding.output.String;
        % check if input is valid variable name
        if not(isvarname(output))
            errordlg('Invalid output layer name. Use only letters, digits and underscores. Start with a letter.')
            return;
        end
    
    if isempty(traces); return; end;
    if not(isfield(handles, 'selection'))
        error('No trace selected'); end
    
    threshold = str2num(handles.functions.Thresholding.value.String);
    above = str2num(handles.functions.Thresholding.above.String);
    below = str2num(handles.functions.Thresholding.below.String);
    
    t = handles.selection.Value(1,1);            
    trace = traces(t).layers.(input);
    
    trace(trace > threshold) = above;
    trace(trace <= threshold) = below;
    
    traces(t).layers.(output) = trace;
                
    setappdata(gcbf, 'traces', traces);
    
    uiAnalyzeTraces('updateTrace');
    
    
end