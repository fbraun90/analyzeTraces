function SavitzkyGoley(figure)

    handles = guidata(figure);
    traces = getappdata(gcf, 'traces');
    
    if not(isfield(handles.functions.SavitzkyGoley, 'panel'))
        % main panel
        handles.functions.SavitzkyGoley.panel = uipanel(...
            'Parent', gcf, ...
            'Units', 'normalized', ...
            'Position', [.32, .01, .33, .44], ...
            'Title', 'Savitzky-Golei-Filtering',...
            'Visible', 'off');
        uicontrol( ...
            'Parent', handles.functions.SavitzkyGoley.panel, ...
            'Style', 'text', ...
            'Units', 'normalized', ...
            'Position', [.02 .85 .17 .1], ...
            'String', 'Input', ...
            'BusyAction', 'cancel');
        handles.functions.SavitzkyGoley.input = uicontrol(...
            'Parent', handles.functions.SavitzkyGoley.panel,...
            'Style', 'popupmenu',...
            'Units', 'normalized',...
            'Position', [.2 .85 .3 .1],...
            'String', '-' ,...
            'Value', 1);
        % Polynomial Order
        uicontrol( ...
            'Parent', handles.functions.SavitzkyGoley.panel, ...
            'Style', 'text', ...
            'Units', 'normalized', ...
            'Position', [.02 .75 .17 .1], ...
            'String', 'polynomial order (k)', ...
            'BusyAction', 'cancel');
        handles.functions.SavitzkyGoley.k = uicontrol(...
            'Parent', handles.functions.SavitzkyGoley.panel, ...
            'Style', 'Edit', ...
            'Units', 'normalized', ...
            'Position',[.2 .78 .3 .07],...
            'String', 3);
        % Frame Size
        uicontrol( ...
            'Parent', handles.functions.SavitzkyGoley.panel, ...
            'Style', 'text', ...
            'Units', 'normalized', ...
            'Position', [.02 .65 .17 .1], ...
            'String', 'frame size (f)', ...
            'BusyAction', 'cancel');
        handles.functions.SavitzkyGoley.f = uicontrol(...
            'Parent', handles.functions.SavitzkyGoley.panel, ...
            'Style', 'Edit', ...
            'Units', 'normalized', ...
            'Position',[.2 .68 .3 .07], ...
            'String', 11);
        % Output
        uicontrol( ...
            'Parent', handles.functions.SavitzkyGoley.panel, ...
            'Style', 'text', ...
            'Units', 'normalized', ...
            'Position', [.02 .55 .17 .1], ...
            'String', 'Output', ...
            'BusyAction', 'cancel'); 
        handles.functions.SavitzkyGoley.output = uicontrol(...
            'Parent', handles.functions.SavitzkyGoley.panel, ...
            'Style', 'Edit', ...
            'Units', 'normalized', ...
            'Position',[.2 .58 .3 .07], ...
            'String', 'SavitzkyGoley');
        handles.functions.SavitzkyGoley.run = uicontrol(...
            'Parent', handles.functions.SavitzkyGoley.panel, ...
            'Style', 'Pushbutton', ...
            'Units', 'normalized', ...
            'Position',[.02 .01 .2 .1], ...
            'String', 'Run on selected', ...
            'Callback', {@calcSlidingAvg, 'active'});
        handles.functions.SavitzkyGoley.run4all = uicontrol(...
            'Parent', handles.functions.SavitzkyGoley.panel, ...
            'Style', 'Pushbutton', ...
            'Units', 'normalized', ...
            'Position',[.22 .01 .2 .1], ...
            'String', 'Run on all Traces', ...
            'Callback', {@calcSlidingAvg, 'all'});
        uicontrol(...
            'Parent', handles.functions.SavitzkyGoley.panel, ...
            'Style', 'Pushbutton', ...
            'Units', 'normalized', ...
            'Position',[.42 .01 .2 .1], ...
            'String', 'Reset', ...
            'Callback', @reset);
        
        guidata(gcf, handles);

    end
    
    % Set function specific tr
    if not(isempty(traces))
        if not(isfield(handles, 'selection'))
        error('No trace selected'); end
        % retrieve layers that are not empty
        t = handles.selection.Value(1,1);

        set(handles.functions.SavitzkyGoley.input, 'String', fieldnames([traces(t).layers]))

        if handles.functions.SavitzkyGoley.input.Value>length(fieldnames([traces(t).layers]))
            set(handles.functions.SavitzkyGoley.input, 'Value', 1)
        end
    end
        
    guidata(gcf, handles);
   
end

function reset(varargin)

handles = guidata(gcf);

set(handles.functions.SavitzkyGoley.input, 'Value', 1);
set(handles.functions.SavitzkyGoley.k, 'String', 3);
set(handles.functions.SavitzkyGoley.f, 'String', 11);
set(handles.functions.SavitzkyGoley.output, 'String', 'SavitzkyGoley');

guidata(gcf, handles);

end

function calcSlidingAvg(hObject, eventdata, range)

    handles = guidata(gcbf);
    traces = getappdata(gcbf, 'traces');
    k = str2num(handles.functions.SavitzkyGoley.k.String);
    f = str2num(handles.functions.SavitzkyGoley.f.String);
    input = handles.functions.SavitzkyGoley.input.String{handles.functions.SavitzkyGoley.input.Value};
    output = handles.functions.SavitzkyGoley.output.String;
        % check if input is valid variable name
        if not(isvarname(output))
            errordlg('Invalid output layer name. Use only letters, digits and underscores. Start with a letter.')
            return;
        end
    
    if isempty(traces); return; end;
    if not(isfield(handles, 'selection'))
        error('No trace selected'); end
    
    switch range
        case 'active'
            % selected trace index
            t = handles.selection.Value(1,1);            
            trace = traces(t).layers.(input);
            SavitzkyTrace = sgolayfilt(trace, k, f);
            traces(t).layers.(output) = SavitzkyTrace;
        case 'all'
            h = waitbar(0,'Calculating...');
            for i=1:length(traces)
                waitbar(i/length(traces),h);
                trace = traces(i).layers.(input);
                SavitzkyTrace = sgolayfilt(trace, k, f);
                traces(i).layers.(output) = SavitzkyTrace;
            end
            delete(h);
    end
    
    % send created layers to the layer control table of the ui
%     layers = [fieldnames([traces.layers])];
%     Data = [num2cell(true(length(layers),1)) layers];
%     set(handles.layers, 'Data', Data);
                
    setappdata(gcbf, 'traces', traces);
    
    uiAnalyzeTraces('updateTrace');
    
end